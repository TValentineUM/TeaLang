digraph finite_state_machine {
rankdir=LR;

// Defining States
node [margin=2 fontsize=32 width=1.3 shape=circle]
node [shape = circle, label="S0", fontsize=14, fixedsize=true] S0;
node [shape = doublecircle, label="S1", fontsize=14] S1;
node [shape = circle, label="S2", fontsize=14] S2;
node [shape = doublecircle, label="S3", fontsize=14] S3
node [shape = doublecircle, label="S4", fontsize=14] S4;
node [shape = doublecircle, label="S5", fontsize=14] S5;
node [shape = circle, label="S6", fontsize=14] S6;
node [shape = doublecircle, label="S7", fontsize=14] S7;
node [shape = doublecircle, label="S8", fontsize=14] S8;
node [shape = doublecircle, label="S9", fontsize=14] S9;
node [shape = doublecircle, label="S10", fontsize=14] S10;
node [shape = circle, label="S11", fontsize=14] S11;
node [shape = circle, label="S12", fontsize=14] S12;
node [shape = doublecircle, label="S13", fontsize=14] S13;
node [shape = doublecircle, label="S14", fontsize=14] S14;
node [shape = circle, label="S15", fontsize=14] S15;
node [shape = circle, label="S16", fontsize=14] S16;
node [shape = doublecircle, label="S17", fontsize=14] S17;
node [shape = circle, label="S18", fontsize=14] S18;
node [shape = circle, label="S19", fontsize=14] S19;
node [shape = circle, label="S20", fontsize=14] S20;
node [shape = doublecircle, label="S21", fontsize=14] S21;

node [shape = point width=0.25 style=invis ] qi;
qi -> S0;


// Integers and Floats
S0   -> S1  [ label = "[1-9]" ];
S1   -> S1  [ label = "[0-9]" ];
S1   -> S2  [ label = "." fontsize=30];
S2   -> S3  [ label = "[0-9]" ];
S3   -> S3  [ label = "[0-9]" ];

// Identifiers and Keywords
S0   -> S4  [ label = "(_|[A-z])\n " ];
S4   -> S4  [ label = "(_|[A-z]|[0-9])\n " ];

// Comparison and Assignment
S0   -> S5  [ label = "="   ];
S0   -> S6  [ label = "!"   ];
S0   -> S7  [ label = "<,>" ];
S5   -> S8  [ label = "="   ];
S6   -> S8  [ label = "="   ];
S7   -> S8  [ label = "="   ];

// Single Character Punctuation
S0   -> S9  [ label = ":{}();"];

// Binary Operators
S0 -> S10   [ label = "+-*" ];


// String Literal
S0 -> S11   [ label = "\""];
S11 -> S12  [ label = "\\"];
S12 -> S11  [ label = "[0x20-0x7E]"];
S11 -> S13  [ label = "\""];

// Comments and Division

S0 -> S14   [ label = "/"];
S14 -> S18  [ label = "/"];
S18 -> S18  [ label = "[0x20-0x2E]\n[0x30-0x7E]"]
S18 -> S17  [ label = "\\n"];
S14 -> S15  [ label = "*"];
S15 -> S16  [ label = "*"];
S16 -> S15  [ label = "[0x20-0x2E]\n[0x30-0x7E]\n\\n"];
S16 -> S17  [ label = "/"];

// Character
S0 -> S19   [ label = "'"];
S19 -> S20   [ label = "[A-z]|[0-9]"];
S20 -> S21   [ label = "'"];


}
